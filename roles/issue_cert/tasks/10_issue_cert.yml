---
  # directions found here https://certbot.eff.org/lets-encrypt/centosrhel8-other
- name: Install certbot if not already installed
  ansible.builtin.dnf:
    name: certbot
    state: present
    disable_gpg_check: true

- name: Make sure Automation Controller nginx is stopped
  ansible.builtin.service:
    name: nginx
    state: stopped
  register: stop_controller
  until: stop_controller is not failed
  retries: 5

- name: SSL cert block
  block:
    # If this fails check out status of certbot: https://letsencrypt.status.io/
    - name: Issue SSL cert with certbot
      ansible.builtin.command: >
        certbot certonly --no-bootstrap --standalone
        -d {{ issue_cert_dns_name }}
        --email ansible-network@redhat.com
        --noninteractive --agree-tos
      register: issue_cert
      until: issue_cert is not failed
      retries: 5
      changed_when: "'Successfully received certificate' in issue_cert.stdout"

    - name: Debug issue_cert output
      ansible.builtin.debug:
        var: issue_cert

    - name: Extract certificate path when newly created
      when: "'Certificate not yet' not in issue_cert.stdout_lines | join(' ')"
      block:
        - name: Set fact for certificate path
          ansible.builtin.set_fact:
            certificate_path: >
              {{ issue_cert.stdout_lines
              | select('match', '^Certificate is saved at:.*')
              | first
              | regex_replace('^Certificate is saved at: ', '')
              | regex_replace('/fullchain.pem$', '') }}

        - name: Print out certificate_path
          ansible.builtin.debug:
            var: certificate_path

    - name: Extract certificate path for when already renewed in /etc/letsencrypt/live
      when: "'Certificate not yet' in issue_cert.stdout_lines | join(' ')"
      block:
        - name: List directories
          ansible.builtin.find:
            paths: "/etc/letsencrypt/live"
            file_type: directory
          register: dirs

        # - name: Sort directories by modification time and get the newest
        #   ansible.builtin.set_fact:
        #     certificate_path: "{{ (dirs.files | sort(attribute='mtime', reverse=true) | first).path }}"
        - name: Sort directories by modification time and get the newest
          ansible.builtin.set_fact:
            certificate_path: "{{ ((dirs.files | sort(attribute='mtime', reverse=true) | first).path | trim).replace('\"', '') }}"

        - name: Output the newest directory
          ansible.builtin.debug:
            msg: "Newest directory is {{ certificate_path }}"

    - name: Move SSL Key for NGINX config (example /etc/tower/tower.key)
      ansible.builtin.copy:
        remote_src: true
        src: "{{ certificate_path }}/privkey.pem"
        # dest: /etc/tower/tower.key
        dest: "{{ lookup('vars', aap_component).ssl_key }}"
        mode: '0644'

    - name: Retrieve new cert.pem from /etc/letsencrypt/live and store in variable generated_cert
      ansible.builtin.slurp:
        src: "{{ certificate_path }}/cert.pem"
      register: generated_cert

    - name: Combine generated_cert and intermediate cert and move to /etc/tower/tower.cert
      ansible.builtin.template:
        src: combined_cert.j2
        # dest: /etc/tower/tower.cert
        dest: "{{ lookup('vars', aap_component).cert }}"
        mode: '0644'

- name: Make sure nginx is started
  ansible.builtin.service:
    name: nginx
    state: started
  register: stop_controller
  until: stop_controller is not failed
  retries: 5
